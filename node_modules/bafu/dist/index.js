"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ifEvery = exports.ifSome = exports.guard = exports.flatMap = exports.map = exports.every = exports.some = exports.aim = exports.curry = exports.queue = exports.pipe = exports.compose = void 0;
function compose(...fns) {
    const lastFn = fns.pop();
    return (...args) => fns.reduceRight((acc, v) => v(acc), lastFn(...args));
}
exports.compose = compose;
function pipe(fn1, ...fns) {
    return (...args) => fns.reduce((v, f) => f(v), fn1(...args));
}
exports.pipe = pipe;
function queue(...fns) {
    const lastFn = fns.pop();
    return (...args) => {
        fns.forEach(f => f(...args));
        return lastFn(...args);
    };
}
exports.queue = queue;
function curry(f, ...args) {
    return (...args2) => f(...args, ...args2);
}
exports.curry = curry;
function aim(f, ...args2) {
    return (...args) => f(...args, ...args2);
}
exports.aim = aim;
function some(...fns) {
    return (...args) => fns.some(fn => fn.apply(null, args));
}
exports.some = some;
function every(...fns) {
    return (...args) => fns.every(fn => fn.apply(null, args));
}
exports.every = every;
function map(...fns) {
    return (...args) => fns.map(f => f(...args));
}
exports.map = map;
function flatMap(...fns) {
    return (...args) => fns.flatMap(f => f(...args));
}
exports.flatMap = flatMap;
function guard(f, gfn) {
    return (arg) => (gfn(arg) && f(arg)) || null;
}
exports.guard = guard;
function ifSome(mainFn, ...checks) {
    const condition = some(...checks);
    return (...args) => (condition(...args) && mainFn(...args)) || null;
}
exports.ifSome = ifSome;
function ifEvery(mainFn, ...checks) {
    const condition = every(...checks);
    return (...args) => (condition(...args) && mainFn(...args)) || null;
}
exports.ifEvery = ifEvery;
